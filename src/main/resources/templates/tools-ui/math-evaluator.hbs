<div class="min-h-screen flex flex-col items-center justify-start pt-20 bg-gray-900 text-gray-300 p-6">
    <h1 class="text-4xl font-bold mb-6">Math Evaluator</h1>
    <p class="text-lg mb-8 text-center max-w-lg">
        A calculator for evaluating mathematical expressions. You can use functions like
        <span class="font-semibold text-blue-400">sqrt</span>,
        <span class="font-semibold text-blue-400">cos</span>,
        <span class="font-semibold text-blue-400">sin</span>,
        <span class="font-semibold text-blue-400">abs</span>, etc.
    </p>

    <div class="flex items-center space-x-4">
        <input
                type="text"
                id="expression"
                placeholder="Enter expression (e.g., 2*sqrt(6))"
                class="bg-gray-800 text-white px-4 py-3 w-72 rounded-md border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
        <button
                id="calculate"
                class="bg-blue-600 px-5 py-3 rounded-md hover:bg-blue-700 transition font-semibold text-white"
        >
            Calculate
        </button>
    </div>

    <div id="result-container" class="hidden mt-8 bg-gray-800 p-5 rounded-md text-left border border-gray-700"
         style="width: calc(18rem + 1rem);">
        <p class="text-lg font-semibold text-blue-300">Result</p>
        <p id="result" class="mt-3 text-2xl font-bold text-white"></p>
    </div>
</div>

<script>
    document.getElementById("calculate").addEventListener("click", evaluateExpression);
    document.getElementById("expression").addEventListener("keydown", function(event) {
        if (event.key === "Enter") {
            evaluateExpression();
        }
    });

    async function evaluateExpression() {
        const expression = document.getElementById("expression").value.trim();
        if (!expression) return;

        try {
            const response = await fetch(`/api/math/math-evaluator?expr=${encodeURIComponent(expression)}`);
            const data = await response.json();
            document.getElementById("result").textContent = data.result;
            document.getElementById("result-container").classList.remove("hidden");
        } catch (error) {
            console.error("Error evaluating expression:", error);
            document.getElementById("result").textContent = "Error";
        }
    }
</script>
