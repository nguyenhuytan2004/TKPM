<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/output.css">
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <title>IT Tools</title>
</head>

<body class="bg-gray-900 text-white">
    <div class="flex min-h-screen">
        <!-- Sidebar -->
        <div class="w-64 bg-gradient-to-b bg-gray-800 p-5">
            <a href="/">
                <div class="w-full bg-green-500 p-4 rounded">
                    <h1 class="text-2xl font-bold">IT - TOOLS</h1>
                    <p class="text-sm">Handy tools for developers</p>
                </div>
            </a>
            <div class="mt-5">
                <ul class="space-y-2">
                    {{#categories}}
                    <div class="flex flex-row items-center cursor-pointer">
                        <ion-icon name="chevron-forward-outline"></ion-icon>
                        <li class="block py-2 px-4">{{name}}</li>
                    </div>
                    {{/categories}}
                </ul>
            </div>
        </div>

        <!-- Main Content -->
        <div class="flex-1 p-10">
            <div class="flex justify-between items-center">
                <input type="text" placeholder="Search..."
                    class="px-4 py-2 w-1/3 bg-gray-800 border border-gray-700 rounded">
                <button class="px-4 py-2 bg-green-600 rounded">Buy me a coffee</button>
            </div>

            <div class="mt-8 flex flex-col items-center">
                <div class="w-1/2 space-y-3 mb-6">
                    <h1 class="text-4xl font-bold text-gray-400">SVG placeholder generator
                    </h1>
                    <p class="text-gray-400">Generate svg images to use as a placeholder in your applications.</p>
                </div>

                <div class="flex flex-col space-y-2 w-1/2">
                    <div class="grid grid-cols-2 gap-6 bg-gray-600 p-4 w-full">
                        <div class="flex space-x-2 items-center">
                            <p class="text-right w-2/5">Width (in px)</p>
                            <input id="widthInput" type="number" value="600" class="bg-gray-500 p-2 rounded-sm w-3/5">
                        </div>
                        <div class="flex space-x-2 items-center">
                            <p class="text-right w-2/5">Background</p>
                            <input id="bgColorPicker" type="color"
                                class="bg-gray-500 p-0.5 rounded-sm w-3/5 h-10 cursor-pointer" value="#cccccc">
                        </div>
                        <div class="flex space-x-2 items-center">
                            <p class="text-right text-nowrap w-2/5">Height (in px)</p>
                            <input id="heightInput" type="number" value="350" class="bg-gray-500 p-2 rounded-sm w-3/5">
                        </div>
                        <div class="flex space-x-2 items-center">
                            <p class="text-right w-2/5">Text Color</p>
                            <input id="textColorPicker" type="color"
                                class="bg-gray-500 p-0.5 rounded-sm w-3/5 h-10 cursor-pointer" value="#333333">
                        </div>
                        <div class="flex space-x-2 items-center">
                            <p class="text-right w-2/5">Font size
                            </p>
                            <input id="fontSizeInput" type="number" value="26" class="bg-gray-500 p-2 rounded-sm w-3/5">
                        </div>
                        <div class="flex space-x-2 items-center">
                            <p class="text-right w-2/5">Custom text</p>
                            <input id="textInput" type="text" class="bg-gray-500 p-2 rounded-sm w-3/5"
                                value="Hello world!">
                        </div>
                    </div>
                    <div class="flex flex-col space-y-6 bg-gray-600 p-4 w-full">
                        <div class="space-y-2">
                            <p>SVG HTML element</p>
                            <pre id="svgInHtml"
                                class="bg-gray-500 text-white p-4 rounded-md break-all border whitespace-pre-wrap">
                            </pre>
                        </div>

                        <div class="space-y-2">
                            <div class="space-y-2">
                                <p>SVG in Base64</p>
                                <input id="svgInBase64"
                                    class="bg-gray-500 text-white p-4 rounded-md overflow-auto w-full border" readonly>
                                </input>
                            </div>
                        </div>
                    </div>
                    <div class="flex space-x-2 justify-center">
                        <button id="btnCopySvg"
                            class="p-3 bg-gray-500 rounded-sm cursor-pointer hover:bg-gray-400 active:bg-gray-300">Copy
                            svg</button>
                        <button id="btnCopyBase64"
                            class="p-3 bg-gray-500 rounded-sm cursor-pointer hover:bg-gray-400 active:bg-gray-300">Copy
                            base64</button>
                        <button id="btnDownloadSvg"
                            class="p-3 bg-gray-500 rounded-sm cursor-pointer hover:bg-gray-400 active:bg-gray-300">Download
                            svg</button>
                    </div>
                    <div class="flex justify-center">
                        <img id="svgImage" src="" alt="SVG">
                    </div>
                </div>
            </div>
        </div>

        {{!-- Gọi API --}}
        <script>
            const widthInput = document.getElementById("widthInput");
            const heightInput = document.getElementById("heightInput");
            const fontSizeInput = document.getElementById("fontSizeInput");
            const bgColorPicker = document.getElementById("bgColorPicker");
            const textColorPicker = document.getElementById("textColorPicker");
            const textInput = document.getElementById("textInput");

            document.addEventListener("DOMContentLoaded", generateSvgPlaceholder);
            widthInput.addEventListener("input", generateSvgPlaceholder);
            heightInput.addEventListener("input", generateSvgPlaceholder);
            fontSizeInput.addEventListener("input", generateSvgPlaceholder);
            bgColorPicker.addEventListener("input", generateSvgPlaceholder);
            textColorPicker.addEventListener("input", generateSvgPlaceholder);
            textInput.addEventListener("input", generateSvgPlaceholder);

            const svgInHtml = document.getElementById("svgInHtml");
            const svgInBase64 = document.getElementById("svgInBase64");
            const svgImage = document.getElementById("svgImage");

            const btnCopySvg = document.getElementById("btnCopySvg");
            const btnCopyBase64 = document.getElementById("btnCopyBase64");
            const btnDownloadSvg = document.getElementById("btnDownloadSvg");

            function generateSvgPlaceholder() {
                const width = widthInput.value;
                const height = heightInput.value;
                const fontSize = fontSizeInput.value;
                const bgColor = bgColorPicker.value;
                const textColor = textColorPicker.value;
                const text = textInput.value;

                fetch(`/api/images-videos/svg-placeholder-generator?width=${width}&height=${height}&fontSize=${fontSize}&bgColor=${encodeURIComponent(bgColor)}&textColor=${encodeURIComponent(textColor)}&text=${encodeURIComponent(text)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.isSuccess) {
                            svgInHtml.textContent = data.svgInHtml;
                            svgInBase64.value = data.svgInBase64;
                            svgImage.src = data.svgImage;

                            btnCopySvg.removeAttribute("disabled");
                            btnCopyBase64.removeAttribute("disabled");
                            btnDownloadSvg.removeAttribute("disabled");
                        }
                        else {
                            btnCopySvg.setAttribute("disabled", "true");
                            btnCopyBase64.setAttribute("disabled", "true");
                            btnDownloadSvg.setAttribute("disabled", "true");
                        }
                    })
            }
        </script>

        {{!-- Cài đặt cho các nút --}}
        <script>
            btnCopySvg.addEventListener("click", () => {
                const svgText = svgInHtml.textContent;
                navigator.clipboard.writeText(svgText).then(() => {
                    alert("Copied SVG HTML!");
                });
            });
            btnCopyBase64.addEventListener("click", () => {
                const base64Text = svgInBase64.value;
                navigator.clipboard.writeText(base64Text).then(() => {
                    alert("Copied Base64!");
                });
            });
            btnDownloadSvg.addEventListener("click", () => {
                const link = document.createElement("a");
                link.href = svgImage.src;
                link.download = "svg-placeholder.svg";
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
        </script>

        <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
        <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
</body>

</html>