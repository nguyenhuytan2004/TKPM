<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/output.css">
    <title>{{title}}</title>
</head>

<body class="bg-gray-900 text-white">
<div class="flex min-h-screen">
    <!-- Sidebar -->
    <div class="fixed w-64 bg-gradient-to-b bg-gray-800 p-5 h-full overflow-auto">
        <a href="/">
            <div class="w-full bg-green-500 p-4 rounded">
                <h1 class="text-2xl font-bold">IT - TOOLS</h1>
                <p class="text-sm">Handy tools for developers</p>
            </div>
        </a>
        <div class="mt-5">
            <ul id="categoryList">
            </ul>
        </div>
    </div>

    <div class="w-64"></div>

    <!-- Main Content (Load ƒë·ªông trang con) -->
    <div class="flex-1 p-10">
        <div class="flex justify-between items-center">
            <div class="flex w-3/7 space-x-4">
                <div class="relative w-full">
                    <input id="searchBar" type="text" placeholder="Search..."
                           class="px-4 py-2 w-full bg-gray-800 border border-gray-700 rounded">

                    <ul id="searchResults"
                        class="absolute w-full bg-gray-800 text-white border border-gray-700 mt-2 rounded-lg shadow-lg hidden z-10 p-4 max-h-96 overflow-y-auto">
                    </ul>
                </div>
            </div>

            <div class="flex space-x-6 items-center">
                {{#username}}
                    <div id="userInformation" class="hidden" data-user-id="{{userId}}" data-username="{{username}}"></div>
                    <div class="flex items-center space-x-4">
                        <!-- Avatar -->
                        <img src="/images/user_profile.png" alt="User Avatar"
                             class="w-10 h-10 rounded-full object-cover border border-gray-500" />

                        <!-- T√™n + Logout -->
                        <div class="flex items-center gap-2">
                            <span class="px-1 whitespace-nowrap">Hi, {{username}} </span>
                            <span class="text-gray-500"> |</span>
                            <form id="logoutForm" action="/user/logout" method="post">
                                <button type="submit"
                                        class="px-2 py-1 hover:text-red-500 hover:underline bg-transparent border-none">
                                    Sign out
                                </button>
                            </form>
                        </div>
                    </div>
                {{/username}}

                {{^username}}
                    <div id="userInformation" class="hidden"></div>
                    <div class="space-x-2">
                        <a href="/user/login" class="hover:underline hover:text-blue-500">Login</a>
                        <span>|</span>
                        <a href="/user/register" class="hover:underline hover:text-blue-500">Register</a>
                    </div>
                {{/username}}
            </div>
        </div>
        <main class="flex-1 py-10">
            {{> (lookup . "body") }} <!-- Load trang theo bi·∫øn body -->
        </main>
    </div>
</div>

<!-- Premium Login Prompt -->
<div id="premiumLoginPopup" class="fixed inset-0 flex justify-center items-center z-50 hidden">
    <!-- Overlay (clicking outside won't close popup) -->
    <div class="absolute inset-0 bg-opacity-30 backdrop-blur-sm"></div>

    <!-- Popup box -->
    <div class="relative bg-gray-900 border border-gray-700 rounded-2xl shadow-xl p-6 w-full max-w-md z-10 text-white space-y-4 pointer-events-auto">
        <div class="flex justify-between items-center">
            <h2 class="text-lg font-semibold">üîí Premium Tool</h2>
            <button id="closePremiumPopup" class="text-gray-400 hover:text-red-400 text-xl">&times;</button>
        </div>
        <p class="text-sm text-gray-300">
            This tool is available for premium users only.
            <br/>
            <a href="/user/login" class="text-blue-400 hover:underline">Log in</a> or <a href="/user/register" class="text-blue-400 hover:underline">register</a> to access it.
        </p>
        <div class="flex justify-end">
            <button id="closePremiumPopupBtn" class="mt-2 px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded text-sm">
                Close
            </button>
        </div>
    </div>
</div>

{{!-- T√¨m ki·∫øm tool --}}
<script>
    const searchBar = document.getElementById("searchBar");
    const searchResults = document.getElementById("searchResults");

    searchBar.addEventListener("input", searchTool);

    function searchTool() {
        const query = searchBar.value.trim();
        if (query.length === 0) {
            searchResults.innerHTML = "";
            searchResults.classList.add("hidden");
            return;
        }

        fetch(`/api/tools?hintText=${encodeURIComponent(query)}`)
            .then(response => response.json())
            .then(data => {
                searchResults.innerHTML = "";
                if (data.length === 0) {
                    searchResults.classList.add("hidden");
                    return;
                }

                searchResults.classList.remove("hidden");

                data.forEach(tool => {
                    const li = document.createElement("li");
                    li.textContent = tool.name;
                    li.classList.add("p-2", "cursor-pointer", "hover:bg-gray-700");

                    li.addEventListener("click", () => {
                        window.location.href = tool.endpoint;
                    });

                    searchResults.appendChild(li);
                });
            })
            .catch(error => console.error(error));
    }

    // ·∫®n k·∫øt qu·∫£ t√¨m ki·∫øm khi click ra ngo√†i
    document.addEventListener("click", (event) => {
        if (!searchBar.contains(event.target) && !searchResults.contains(event.target)) {
            searchResults.classList.add("hidden");
        }
    });
</script>

{{!-- Hi·ªÉn th·ªã danh s√°ch categories --}}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        fetch(`/api/categories`)
            .then(response => response.json())
            .then(categories => {
                const categoryList = document.getElementById("categoryList");
                categories.forEach(category => {
                    categoryList.innerHTML += `<div class="categoryContainer flex flex-col cursor-pointer" data-category-id="${category.id}">
                <div class="flex items-center">
                    <svg class="arrow-icon h-3 w-3 transition-transform duration-300 ease-in-out rotate-270"
                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                        <path fill="#c8c8c8"
                            d="M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z" />
                    </svg>
                    <li class="block py-2 px-4 text-gray-400">${category.name}</li>
                </div>
                <div class="toolsContainer ml-5 transition-all duration-300 opacity-0 overflow-hidden"
                    style="max-height: 0px;">
                </div>
            </div>`;
                });

                loadToolsAndRegisterEvents();
            })
            .catch(error => console.error("Error fetching categories: ", error));
    });

    // Load c√¥ng c·ª• cho m·ªói category v√† x·ª≠ l√Ω s·ª± ki·ªán click v√†o category
    function loadToolsAndRegisterEvents() {
    fetch(`/api/tools-per-category`)
        .then(response => response.json())
        .then(data => {
            document.querySelectorAll(".categoryContainer").forEach(categoryContainer => {
                const categoryId = categoryContainer.getAttribute("data-category-id");
                const tools = data[categoryId];

                if (tools) {
                    const toolsContainer = categoryContainer.querySelector(".toolsContainer");
                    tools.forEach(tool => {
                        const toolElement = document.createElement("div");
                        toolElement.classList.add("p-2", "rounded", "cursor-pointer", "hover:bg-gray-600", "transition", "duration-300");

                        // T·∫°o m·ªôt container cho t√™n c√¥ng c·ª• v√† bi·ªÉu t∆∞·ª£ng Premium
                        const toolContent = document.createElement("div");
                        toolContent.classList.add("flex", "items-center", "space-x-2");

                        // Th√™m t√™n c√¥ng c·ª•
                        const toolName = document.createElement("span");
                        toolName.classList.add("text-white");
                        toolName.textContent = tool.name;

                        toolContent.appendChild(toolName);

                        // N·∫øu c√¥ng c·ª• l√† Premium, hi·ªÉn th·ªã bi·ªÉu t∆∞·ª£ng sao v√†ng
                        if (tool.isPremium) {
                            const premiumIcon = document.createElement("svg");
                            premiumIcon.setAttribute("class", "h-4 w-4 text-yellow-100");
                            premiumIcon.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                            premiumIcon.setAttribute("fill", "currentColor");
                            premiumIcon.setAttribute("viewBox", "0 0 20 20");
                            premiumIcon.innerHTML = '<path d="M10 1.5l2.755 5.58 6.165.896-4.46 4.347 1.053 6.144L10 15.675l-5.513 2.792 1.053-6.144-4.46-4.347 6.165-.896L10 1.5z" />';
                            toolContent.appendChild(premiumIcon);
                        }

                        toolElement.appendChild(toolContent);

                        // X·ª≠ l√Ω s·ª± ki·ªán click
                        toolElement.addEventListener("click", (e) => {
                            e.stopPropagation();

                            if (tool.isPremium) {
                                // Hi·ªÉn th·ªã popup Premium
                                const popup = document.getElementById("premiumLoginPopup");
                                if (popup) {
                                    popup.classList.remove("hidden");
                                }
                            } else {
                                // M·ªü trang c√¥ng c·ª• th∆∞·ªùng
                                window.location.href = "/plugin" + tool.endpoint;
                            }
                        });

                        toolsContainer.appendChild(toolElement);
                    });
                }
            });

            // Toggle m·ªü/ƒë√≥ng danh s√°ch c√¥ng c·ª• khi click v√†o category
            document.querySelectorAll(".categoryContainer").forEach(categoryContainer => {
                categoryContainer.addEventListener("click", function () {
                    const toolsContainer = this.querySelector(".toolsContainer");
                    const arrowIcon = this.querySelector(".arrow-icon");

                    if (toolsContainer.style.maxHeight === "0px") {
                        const maxHeight = 2 * toolsContainer.scrollHeight + "px";
                        toolsContainer.style.maxHeight = maxHeight;
                        toolsContainer.classList.add("opacity-100");
                        toolsContainer.classList.remove("opacity-0");

                        arrowIcon.classList.remove("rotate-270");
                        arrowIcon.classList.add("rotate-360");
                    } else {
                        toolsContainer.style.maxHeight = "0px";
                        toolsContainer.classList.remove("opacity-100");
                        toolsContainer.classList.add("opacity-0");

                        arrowIcon.classList.remove("rotate-360");
                        arrowIcon.classList.add("rotate-270");
                    }
                });
            });
        })
        .catch(error => console.error("Error fetching tools per category: ", error));
}

</script>

</body>

</html>
