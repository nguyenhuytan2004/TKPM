<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/output.css" />
    <title>IT Tools</title>
</head>

<body class="bg-gray-900 text-white">
    <div class="flex min-h-screen">
        <!-- Sidebar -->
        <div class="w-64 bg-gradient-to-b bg-gray-800 p-5">
            <a href="/">
                <div class="w-full bg-gradient-to-b from-green-500 to-green-700 p-4 rounded">
                    <h1 class="text-2xl font-bold">IT - TOOLS</h1>
                    <p class="text-sm">Handy tools for developers</p>
                </div>
            </a>
            <div class="mt-5">
                <ul class="space-y-2">
                    {{#categories}}
                    <div class="flex flex-row items-center cursor-pointer">
                        <ion-icon name="chevron-forward-outline"></ion-icon>
                        <li class="block py-2 px-4">{{name}}</li>
                    </div>
                    {{/categories}}
                </ul>
            </div>
        </div>

        <!-- Main Content -->
        <div class="flex-1 p-10">
            <div class="flex justify-between items-center">
                <input type="text" placeholder="Search..."
                    class="px-4 py-2 w-1/3 bg-gray-800 border border-gray-700 rounded" />
                <button class="px-4 py-2 bg-green-600 rounded">Buy me a
                    coffee</button>
            </div>

            <div class="mt-8 flex flex-col items-center space-y-2">
                <div class="w-1/2 space-y-3 mb-6">
                    <h1 class="text-4xl font-bold text-gray-400">Encode/decode URL-formatted strings
                    </h1>
                    <p class="text-gray-400">Encode text to URL-encoded format (also known as "percent-encoded"), or
                        decode from it.</p>
                </div>

                <div class="flex flex-row space-x-2 w-full">
                    <div class="p-6 bg-gray-600 w-1/2 space-y-6">
                        <p class="text-lg">Encode</p>
                        <div class="flex flex-col space-y-2">
                            <p>Your string:</p>
                            <input id="inputText" class="bg-gray-500 p-3 rounded-md" value="Hello world :)"></input>
                        </div>
                        <div class="flex flex-col space-y-2">
                            <p>Your string encoded:</p>
                            <p id="encodedString" class="bg-gray-500 p-3 rounded-md">
                            </p>
                        </div>
                    </div>
                    <div class="p-6 bg-gray-600 w-1/2 space-y-6">
                        <p class="text-lg">Decode</p>
                        <div id="encodedStringInputContainer" class="flex flex-col space-y-2">
                            <p>Your encoded string:</p>
                            <input id="inputEncodedString" class="bg-gray-500 p-3 rounded-md"
                                value="Hello+world+%3A%29"></input>
                        </div>
                        <div class="flex flex-col space-y-2">
                            <p>Your string decoded:</p>
                            <p id="decodedString" class="bg-gray-500 p-3 rounded-md">
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {{!-- Encode --}}
    <script>
        const inputText = document.getElementById("inputText");
        const encodedString = document.getElementById("encodedString");

        document.addEventListener("DOMContentLoaded", encodeTextToUrl);
        inputText.addEventListener("input", encodeTextToUrl);

        function encodeTextToUrl() {
            const string = inputText.value;

            fetch(`/api/web/url-encode-decode/encode?string=${encodeURIComponent(string)}`)
                .then(response => response.json())
                .then(data => encodedString.textContent = data.encodedString)
                .catch(error => console.log(error));
        }
    </script>

    {{!-- Decode --}}
    <script>
        const inputEncodedString = document.getElementById("inputEncodedString");
        const decodedString = document.getElementById("decodedString");

        document.addEventListener("DOMContentLoaded", decodeUrlToText);
        inputEncodedString.addEventListener("input", decodeUrlToText);

        function decodeUrlToText() {
            const encodedString = inputEncodedString.value;

            if (encodedString == "") {
                decodedString.textContent = "";
                const errorElement = document.getElementById("errorMessage");
                if (errorElement) {
                    errorElement.remove();
                }

                return;
            }

            fetch(`/api/web/url-encode-decode/decode?encodedString=${encodeURIComponent(encodedString)}`)
                .then(response => response.json())
                .then(data => {
                    const divContainer = document.getElementById("encodedStringInputContainer");
                    if (data.isSuccess) {
                        decodedString.textContent = data.decodedString;
                        const errorElement = document.getElementById("errorMessage");
                        if (errorElement) {
                            errorElement.remove();
                        }
                    } else {
                        if (!document.getElementById("errorMessage")) {
                            decodedString.textContent = "";
                            const errorElement = document.createElement("p");
                            errorElement.id = "errorMessage";
                            errorElement.className = "text-red-600";
                            errorElement.textContent = "Impossible to parse this string";
                            divContainer.appendChild(errorElement);
                        }
                    }
                })
                .catch(error => console.log(error));
        }
    </script>

    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
</body>

</html>